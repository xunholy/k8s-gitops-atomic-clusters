name: "Bootstrap FluxCD"

on:
  repository_dispatch:
    types: [Kustomization/cluster-*.flux-system]
  workflow_dispatch:
    inputs:
      projectID:
        type: string
        description: "GCP Project ID"
        default: "atomic-gke-clusters"
        required: true
      clusterName:
        type: string
        description: "GKE Cluster Name"
        required: true
      location:
        type: string
        description: "GKE Location Name (Region or Zone)"
        default: "australia-southeast1"
        required: true

concurrency:
  group: fluxcd-bootstrap-${{ github.event.inputs.clusterName || github.event.client_payload.metadata.cluster }}
  cancel-in-progress: false # Allows workflows for different clusters to run concurrently

permissions:
  id-token: write
  contents: write

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      # REQUIRED: actions/checkout MUST come before auth
      - uses: "actions/checkout@v3"

      - name: Extract Event Source
        run: |
          echo "event source..${{ toJSON(github.event.client_payload) }}"

      - name: Override Defaults
        id: override
        run: |
          echo "projectID=${{ github.event.inputs.projectID || github.event.client_payload.metadata.project }}" >> $GITHUB_OUTPUT
          echo "clusterName=${{ github.event.inputs.clusterName || github.event.client_payload.metadata.cluster }}" >> $GITHUB_OUTPUT
          echo "location=${{ github.event.inputs.location || github.event.client_payload.metadata.location }}" >> $GITHUB_OUTPUT

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-oidc-pool/providers/github-provider"
          service_account: "github-oidc@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      # The KUBECONFIG env var is automatically exported and picked up by kubectl.
      - id: "get-credentials"
        uses: "google-github-actions/get-gke-credentials@v1"
        with:
          project_id: ${{ steps.override.outputs.projectID }}
          cluster_name: ${{ steps.override.outputs.clusterName }}
          location: ${{ steps.override.outputs.location }}

      - name: "Create cluster config"
        run: |
          # Create the namespace if it doesn't already exist
          kubectl get namespace flux-system >/dev/null 2>&1 || kubectl create namespace flux-system
          # Always create or update the ConfigMap
          kubectl create configmap cluster-config -n flux-system \
            --from-literal=GCP_PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}" \
            --from-literal=GCP_PROJECT_NUMBER="${{ secrets.GCP_PROJECT_NUMBER }}" \
            --from-literal=GKE_CLUSTER_NAME="${{ steps.override.outputs.clusterName }}" \
            --from-literal=GKE_LOCATION="${{ steps.override.outputs.location }}" \
            --from-literal=REPO_OWNER="${{ github.repository_owner }}" \
            --from-literal=REPO_NAME="${{ github.event.repository.name }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Run FluxCD pre-installation checks
        run: |
          flux check --pre

      - name: "Bootstrap FluxCD"
        id: bootstrap
        run: |
          export GITHUB_TOKEN="${{ secrets.FLUX_GITHUB_PAT }}"
          flux bootstrap github \
            --owner="${{ github.repository_owner }}" \
            --repository="${{ github.event.repository.name }}" \
            --path=kubernetes/clusters/${{ steps.override.outputs.clusterName }}/ \
            --branch=main \
            --network-policy=true \
            --token-auth \
            --timeout=10m0s

      - name: Run FluxCD installation checks
        run: |
          flux check
